A20 Line:
    A20是第21个地址线。8086能访问1MB的内存，这就是说它有20根地址线，但是8086有一个怪癖，那就是"内存环绕"。简单来说就是以前的程序
  员目光短浅，为了让地址不超过1MB，干脆禁用第21根地址线，而之后发布的CPU都要兼容这一特性(我们开发的是基于x86的内核)，因此如果想要
  访问完整的32位或64位地址空间，首先要做的就是启用A20 Line。
    使用一些固定的in, out指令，可以快速启用A20 Line。
    in al, 0x92
    or al, 2
    out 0x92, al

Real Mode:
    Real Mode是一种简单的16位操作模式，存在于所有x86处理器上。Real Mode是第一个x86操作模式，在保护模式诞生之前，许多早期操作
  系统都是使用它。出于兼容的目的，所有x86的处理器都以实模式开始执行。即计算机开机，开始自检，将磁盘的第一个扇区加载到内存，开始执行，
  此时CPU就是Real Mode，如果想进入Protect Mode需要手动进行切换。
    CPU的状态完全是由其寄存器决定的，包括使用的是那一个页表，CPU当前是处于哪一个Rings等级，CPU此时是Real Mode还是Protect Mode,
  我们所说的切换进程，也只不过是切换CPU的寄存器状态。
    Real Mode相较于Protect Mode的好处和坏处：
    坏处:
        1. 可用内存不到1MB
        2. 没有基于硬件的内存保护(GDT)，也没有虚拟内存(没办法保护内存)
        3. 没有内置的安全机制来防止有漏洞或恶意的应用程序(没有Rings级别)
        4. 默认的CPU操作数长度只有16位。
        5. 提供的内存寻址模式相较于其他CPU模式更具限制性(只有直接和间接寻址?)
        6. 访问超过64KB的内存需要使用难以使用的段寄存器，即 段寄存器 << 16 + 偏移量，因为只有16位二进制数
    好处：
        1. 可以使用所有的BIOS驱动程序和中断
        2. 可以使用BIOS提供的所有高级的低级API集合
        3. 由于不用检查Rings等级和内存映射，Real Mode访问内存更快。

Protect Mode:
    自80826以来，保护模式就是现代英特尔处理器的主要操作模式，在80826之前都是Real Mode。在80386及更高版本上，32位保护模式允许
  使用多个虚拟地址空间，每个虚拟地址空间最多有4GB的可寻址内存；并使系统能够实施严格的内存和硬件IO保护(即没办法访问其他进程的内存，
  也没有办法修改IO端口的值), 以及通过Rings限制可用指令集。
    CPU是由BIOS启动的，一开始的模式是Real Mode。通过将CPU切换到Protect Mode能够释放CPU的最大威能，但是在Protect Mode下没
  办法使用大部分的BIOS中断。
    那么如何进入保护模式呢？
    1. 禁用中断
    2. 启用A20 Line
    3. 加载GDT以及段选择器
    决定CPU处于Real Mode还是Protect Mode的最关键因素在于cr0的最低位，1代表Protect Mode，0代表Real Mode。
    Protect Mode和Real Mode的区别就是1.内存空间增长，2.能够使用虚拟内存，3.使用Rings限制可用指令集
    正是有了Protect Mode，才有了我们熟悉的Kernel，User land，MultiTask，虚拟内存 这些东西。

Segment Selector: 
    段选择器是IA-32和x86-64架构特有的16位二进制数据结构。它用在Protected Mode和Long Mode中。它标识了全局描述符表和本地描述符
  中的段。它包含三个字段，用于在各种情况下和分段交互。
    3~15: index, GDT或LDT entry 的索引，由于段描述符只有8位，所以低三位永远是0。
    2~2: TI，0代表GDT，1代表LDT
    0~1: RPL, 代表selector的权限等级，选择器的请求特权级别决定了选择器在权限检查期间是否有效，并可以设置执行或内存访问权限。

Global Descriptor Table(GDT):
    在Real Mode的介绍中说，GDT是基于硬件的内存保护。GDT是特定于IA-32和x86-64体系结构的二进制数据结构。
