随笔: 
心中有无数个优化该内核的想法，但是我现在还是一个小白，因此现在要做的把想法记下来并压在心里，现在最重要的是完全理解这个最基础的版本。
不要想得太远，那只会降低效率、徒增焦虑。我要做的是从眼前的事着手，一步一个脚印，把这个东西彻底搞清楚，这也是我的初心。
等到我把基础琢磨透，接下来要做的事自然是水到渠成。
内存管理和文件系统都是非常有学问的东西，我想搞明白这两个的基础版本，优化版本和现代实现方式。
在内核中涉及到频繁的分配小内存，因此内存管理的升级很重要。而且用户态程序也会频繁申请小内存，这两个是否有共通之处呢？

内核之路任重道远，吾将上下而求索，一步一步稳扎稳打。

learning plan:


update list:
1. 更新内存管理，实现可以分配不连续的物理页面的管理机制。
2. 更新文件系统，实现类似 linux ETX4 的文件系统。
3. 实现小内存分配功能，可以参考slab的实现方式。
4. 读懂linux源码，理解linux在各个模块是如何实现的。
5. 我想知道brk()和mmap()的实现细节。
6. 目前实现的任务切换是基于tss的，我想实现基于堆栈任务切换，浏览器书签里有教程。

    请时刻注意，我们开发的并不是linux内核，它只是一个能实现基础功能的内核。为了教学方便，它的很多模块采用的低效、古老但是简单的实现
    方法。我的计划是通过写完这个最基础的版本作为我内核的入门，并且完全理解这个版本，在此版本的基础上将核心功能一步步向Linux靠拢。
    因此在遇到该项目中的实现方法与Linux不同时，不要焦虑，要意识到这个版本只是最基础的内核。要思考该版本的不足之处，并思考Linux的
    机制是如何实现的，不要混淆。